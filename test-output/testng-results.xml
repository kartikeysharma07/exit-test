<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="17" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-12T19:36:45 IST" name="Suite" finished-at="2024-06-12T19:39:31 IST" duration-ms="165397">
    <groups>
      <group name="regression">
        <method signature="FirstOpeartionTest.search(java.lang.String,java.lang.String)[pri:1, instance:testcase.FirstOpeartionTest@2b30a42c]" name="search" class="testcase.FirstOpeartionTest"/>
        <method signature="ThirdOperationTest.Advertise()[pri:1, instance:testcase.ThirdOperationTest@19932c16]" name="Advertise" class="testcase.ThirdOperationTest"/>
        <method signature="FirstOpeartionTest.grocery(java.lang.String,java.lang.String)[pri:2, instance:testcase.FirstOpeartionTest@2b30a42c]" name="grocery" class="testcase.FirstOpeartionTest"/>
        <method signature="ThirdOperationTest.Furniture()[pri:2, instance:testcase.ThirdOperationTest@19932c16]" name="Furniture" class="testcase.ThirdOperationTest"/>
        <method signature="FirstOpeartionTest.specficProduct()[pri:3, instance:testcase.FirstOpeartionTest@2b30a42c]" name="specficProduct" class="testcase.FirstOpeartionTest"/>
        <method signature="SecondOperationTest.Careers()[pri:3, instance:testcase.SecondOperationTest@23e84203]" name="Careers" class="testcase.SecondOperationTest"/>
        <method signature="ThirdOperationTest.GiftCard()[pri:3, instance:testcase.ThirdOperationTest@19932c16]" name="GiftCard" class="testcase.ThirdOperationTest"/>
        <method signature="FirstOpeartionTest.becomeSeller(java.lang.String,java.lang.String)[pri:4, instance:testcase.FirstOpeartionTest@2b30a42c]" name="becomeSeller" class="testcase.FirstOpeartionTest"/>
        <method signature="SecondOperationTest.Login()[pri:4, instance:testcase.SecondOperationTest@23e84203]" name="Login" class="testcase.SecondOperationTest"/>
        <method signature="ThirdOperationTest.GiftCardPersonal()[pri:4, instance:testcase.ThirdOperationTest@19932c16]" name="GiftCardPersonal" class="testcase.ThirdOperationTest"/>
        <method signature="FirstOpeartionTest.fashion(java.lang.String,java.lang.String)[pri:5, instance:testcase.FirstOpeartionTest@2b30a42c]" name="fashion" class="testcase.FirstOpeartionTest"/>
        <method signature="ThirdOperationTest.Cart()[pri:5, instance:testcase.ThirdOperationTest@19932c16]" name="Cart" class="testcase.ThirdOperationTest"/>
        <method signature="FirstOpeartionTest.notification()[pri:6, instance:testcase.FirstOpeartionTest@2b30a42c]" name="notification" class="testcase.FirstOpeartionTest"/>
        <method signature="ThirdOperationTest.Travel()[pri:6, instance:testcase.ThirdOperationTest@19932c16]" name="Travel" class="testcase.ThirdOperationTest"/>
        <method signature="FirstOpeartionTest.twowheeler()[pri:7, instance:testcase.FirstOpeartionTest@2b30a42c]" name="twowheeler" class="testcase.FirstOpeartionTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="FirstOpeartionTest.search(java.lang.String,java.lang.String)[pri:1, instance:testcase.FirstOpeartionTest@2b30a42c]" name="search" class="testcase.FirstOpeartionTest"/>
        <method signature="SecondOperationTest.Electronics()[pri:1, instance:testcase.SecondOperationTest@23e84203]" name="Electronics" class="testcase.SecondOperationTest"/>
        <method signature="FirstOpeartionTest.grocery(java.lang.String,java.lang.String)[pri:2, instance:testcase.FirstOpeartionTest@2b30a42c]" name="grocery" class="testcase.FirstOpeartionTest"/>
        <method signature="SecondOperationTest.Rewards()[pri:2, instance:testcase.SecondOperationTest@23e84203]" name="Rewards" class="testcase.SecondOperationTest"/>
        <method signature="FirstOpeartionTest.specficProduct()[pri:3, instance:testcase.FirstOpeartionTest@2b30a42c]" name="specficProduct" class="testcase.FirstOpeartionTest"/>
        <method signature="FirstOpeartionTest.becomeSeller(java.lang.String,java.lang.String)[pri:4, instance:testcase.FirstOpeartionTest@2b30a42c]" name="becomeSeller" class="testcase.FirstOpeartionTest"/>
        <method signature="FirstOpeartionTest.fashion(java.lang.String,java.lang.String)[pri:5, instance:testcase.FirstOpeartionTest@2b30a42c]" name="fashion" class="testcase.FirstOpeartionTest"/>
        <method signature="SecondOperationTest.Signup()[pri:5, instance:testcase.SecondOperationTest@23e84203]" name="Signup" class="testcase.SecondOperationTest"/>
        <method signature="FirstOpeartionTest.notification()[pri:6, instance:testcase.FirstOpeartionTest@2b30a42c]" name="notification" class="testcase.FirstOpeartionTest"/>
        <method signature="SecondOperationTest.Shopsy()[pri:6, instance:testcase.SecondOperationTest@23e84203]" name="Shopsy" class="testcase.SecondOperationTest"/>
        <method signature="FirstOpeartionTest.twowheeler()[pri:7, instance:testcase.FirstOpeartionTest@2b30a42c]" name="twowheeler" class="testcase.FirstOpeartionTest"/>
        <method signature="SecondOperationTest.CorporateWebsite()[pri:7, instance:testcase.SecondOperationTest@23e84203]" name="CorporateWebsite" class="testcase.SecondOperationTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-06-12T19:36:45 IST" name="Test" finished-at="2024-06-12T19:39:31 IST" duration-ms="165397">
      <class name="testcase.ThirdOperationTest">
        <test-method is-config="true" signature="setUp_Configurations()[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:38:55 IST" name="setUp_Configurations" finished-at="2024-06-12T19:38:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp_Configurations -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:38:55 IST" name="setup" finished-at="2024-06-12T19:38:59 IST" duration-ms="4574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.ThirdOperationTest.Advertise()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Advertise()[pri:1, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:38:59 IST" name="Advertise" finished-at="2024-06-12T19:39:02 IST" duration-ms="2547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Advertise -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:02 IST" name="tearDownTest" finished-at="2024-06-12T19:39:03 IST" duration-ms="708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:03 IST" name="setup" finished-at="2024-06-12T19:39:07 IST" duration-ms="4519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.ThirdOperationTest.Furniture()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Furniture()[pri:2, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:07 IST" name="Furniture" finished-at="2024-06-12T19:39:09 IST" duration-ms="1459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Furniture -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:09 IST" name="tearDownTest" finished-at="2024-06-12T19:39:09 IST" duration-ms="704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:09 IST" name="setup" finished-at="2024-06-12T19:39:13 IST" duration-ms="3969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.ThirdOperationTest.GiftCard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GiftCard()[pri:3, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:13 IST" name="GiftCard" finished-at="2024-06-12T19:39:17 IST" duration-ms="3776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GiftCard -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:17 IST" name="tearDownTest" finished-at="2024-06-12T19:39:18 IST" duration-ms="522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:18 IST" name="setup" finished-at="2024-06-12T19:39:18 IST" duration-ms="26" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.ThirdOperationTest.GiftCardPersonal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GiftCardPersonal()[pri:4, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:18 IST" name="GiftCardPersonal" finished-at="2024-06-12T19:39:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GiftCardPersonal -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:18 IST" name="tearDownTest" finished-at="2024-06-12T19:39:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:18 IST" name="setup" finished-at="2024-06-12T19:39:22 IST" duration-ms="4007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.ThirdOperationTest.Cart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Cart()[pri:5, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:22 IST" name="Cart" finished-at="2024-06-12T19:39:23 IST" duration-ms="1605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Cart -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:23 IST" name="tearDownTest" finished-at="2024-06-12T19:39:24 IST" duration-ms="715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:24 IST" name="setup" finished-at="2024-06-12T19:39:28 IST" duration-ms="3925" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.ThirdOperationTest.Travel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Travel()[pri:6, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:28 IST" name="Travel" finished-at="2024-06-12T19:39:30 IST" duration-ms="2238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Travel -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:30 IST" name="tearDownTest" finished-at="2024-06-12T19:39:31 IST" duration-ms="701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testcase.ThirdOperationTest@19932c16]" started-at="2024-06-12T19:39:31 IST" name="tearDownClass" finished-at="2024-06-12T19:39:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testcase.ThirdOperationTest -->
      <class name="testcase.SecondOperationTest">
        <test-method is-config="true" signature="setUp_Configurations()[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:37:53 IST" name="setUp_Configurations" finished-at="2024-06-12T19:37:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp_Configurations -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:37:53 IST" name="setup" finished-at="2024-06-12T19:37:57 IST" duration-ms="3926" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.SecondOperationTest.Electronics()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Electronics()[pri:1, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:37:57 IST" name="Electronics" finished-at="2024-06-12T19:38:00 IST" duration-ms="3343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Electronics -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:00 IST" name="tearDownTest" finished-at="2024-06-12T19:38:01 IST" duration-ms="781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:01 IST" name="setup" finished-at="2024-06-12T19:38:05 IST" duration-ms="4375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.SecondOperationTest.Rewards()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Rewards()[pri:2, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:05 IST" name="Rewards" finished-at="2024-06-12T19:38:09 IST" duration-ms="3246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Rewards -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:09 IST" name="tearDownTest" finished-at="2024-06-12T19:38:09 IST" duration-ms="687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:09 IST" name="setup" finished-at="2024-06-12T19:38:13 IST" duration-ms="3902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.SecondOperationTest.Careers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Careers()[pri:3, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:13 IST" name="Careers" finished-at="2024-06-12T19:38:22 IST" duration-ms="9190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Careers -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:22 IST" name="tearDownTest" finished-at="2024-06-12T19:38:23 IST" duration-ms="690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:23 IST" name="setup" finished-at="2024-06-12T19:38:27 IST" duration-ms="3981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.SecondOperationTest.Login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Login()[pri:4, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:27 IST" name="Login" finished-at="2024-06-12T19:38:31 IST" duration-ms="3958" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Login operation failed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Login operation failed
at org.testng.Assert.fail(Assert.java:111)
at pages.SecondOperationPage.Login(SecondOperationPage.java:84)
at testcase.SecondOperationTest.Login(SecondOperationTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:31 IST" name="tearDownTest" finished-at="2024-06-12T19:38:32 IST" duration-ms="697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:32 IST" name="setup" finished-at="2024-06-12T19:38:36 IST" duration-ms="3929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.SecondOperationTest.Signup()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Signup()[pri:5, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:36 IST" name="Signup" finished-at="2024-06-12T19:38:38 IST" duration-ms="2601" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Login operation not performed successfully expected [https://www.flipkart.com/] but found [https://www.flipkart.com/account/login?signup=true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Login operation not performed successfully expected [https://www.flipkart.com/] but found [https://www.flipkart.com/account/login?signup=true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at pages.SecondOperationPage.Signup(SecondOperationPage.java:93)
at testcase.SecondOperationTest.Signup(SecondOperationTest.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signup -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:39 IST" name="tearDownTest" finished-at="2024-06-12T19:38:39 IST" duration-ms="711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:39 IST" name="setup" finished-at="2024-06-12T19:38:44 IST" duration-ms="4143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.SecondOperationTest.Shopsy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Shopsy()[pri:6, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:44 IST" name="Shopsy" finished-at="2024-06-12T19:38:47 IST" duration-ms="3662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Shopsy -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:47 IST" name="tearDownTest" finished-at="2024-06-12T19:38:48 IST" duration-ms="855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:48 IST" name="setup" finished-at="2024-06-12T19:38:52 IST" duration-ms="3816" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.SecondOperationTest.CorporateWebsite()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CorporateWebsite()[pri:7, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:52 IST" name="CorporateWebsite" finished-at="2024-06-12T19:38:54 IST" duration-ms="2258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CorporateWebsite -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:54 IST" name="tearDownTest" finished-at="2024-06-12T19:38:55 IST" duration-ms="671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testcase.SecondOperationTest@23e84203]" started-at="2024-06-12T19:38:55 IST" name="tearDownClass" finished-at="2024-06-12T19:38:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testcase.SecondOperationTest -->
      <class name="testcase.FirstOpeartionTest">
        <test-method is-config="true" signature="setUp_Configurations()[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:36:46 IST" name="setUp_Configurations" finished-at="2024-06-12T19:36:46 IST" duration-ms="588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp_Configurations -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:36:47 IST" name="setup" finished-at="2024-06-12T19:36:47 IST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.FirstOpeartionTest.search(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="search(java.lang.String,java.lang.String)[pri:1, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:36:47 IST" name="search" data-provider="searchdata" finished-at="2024-06-12T19:36:47 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[phones]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[samsung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:36:47 IST" name="tearDownTest" finished-at="2024-06-12T19:36:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:36:47 IST" name="setup" finished-at="2024-06-12T19:36:52 IST" duration-ms="5276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.FirstOpeartionTest.grocery(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="grocery(java.lang.String,java.lang.String)[pri:2, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:36:52 IST" name="grocery" data-provider="grocerydata" finished-at="2024-06-12T19:36:57 IST" duration-ms="4211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[208001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Lays American Style Cream and Onion Chips]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- grocery -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:36:57 IST" name="tearDownTest" finished-at="2024-06-12T19:36:58 IST" duration-ms="850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:36:58 IST" name="setup" finished-at="2024-06-12T19:37:04 IST" duration-ms="6265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.FirstOpeartionTest.specficProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="specficProduct()[pri:3, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:04 IST" name="specficProduct" finished-at="2024-06-12T19:37:04 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- specficProduct -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:04 IST" name="tearDownTest" finished-at="2024-06-12T19:37:05 IST" duration-ms="864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:05 IST" name="setup" finished-at="2024-06-12T19:37:09 IST" duration-ms="4081" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.FirstOpeartionTest.becomeSeller(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="becomeSeller(java.lang.String,java.lang.String)[pri:4, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:09 IST" name="becomeSeller" data-provider="sellerdata" finished-at="2024-06-12T19:37:19 IST" duration-ms="10437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9919520904]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- becomeSeller -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:19 IST" name="tearDownTest" finished-at="2024-06-12T19:37:20 IST" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:20 IST" name="setup" finished-at="2024-06-12T19:37:27 IST" duration-ms="6472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.FirstOpeartionTest.fashion(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="fashion(java.lang.String,java.lang.String)[pri:5, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:27 IST" name="fashion" data-provider="fashiondata" finished-at="2024-06-12T19:37:32 IST" duration-ms="5678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Men's Top Wear]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Men Regular Fit Solid Spread Collar Casual Shirt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fashion -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:32 IST" name="tearDownTest" finished-at="2024-06-12T19:37:33 IST" duration-ms="646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:33 IST" name="setup" finished-at="2024-06-12T19:37:39 IST" duration-ms="6441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.FirstOpeartionTest.notification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="notification()[pri:6, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:39 IST" name="notification" finished-at="2024-06-12T19:37:42 IST" duration-ms="2291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notification -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:42 IST" name="tearDownTest" finished-at="2024-06-12T19:37:42 IST" duration-ms="650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:42 IST" name="setup" finished-at="2024-06-12T19:37:48 IST" duration-ms="6052" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcase.FirstOpeartionTest.twowheeler()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="twowheeler()[pri:7, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:48 IST" name="twowheeler" finished-at="2024-06-12T19:37:50 IST" duration-ms="1744" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Buy Two Wheeler Vehicle Online From Flipkart | Best Deals on Petrol Vehicle 11-Jun-24] but found [Buy Two Wheeler Vehicle Online From Flipkart | Best Deals on Petrol Vehicle 12-Jun-24]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Buy Two Wheeler Vehicle Online From Flipkart | Best Deals on Petrol Vehicle 11-Jun-24] but found [Buy Two Wheeler Vehicle Online From Flipkart | Best Deals on Petrol Vehicle 12-Jun-24]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pages.FirstOpeartionPage.TwoWheeler(FirstOpeartionPage.java:154)
at testcase.FirstOpeartionTest.twowheeler(FirstOpeartionTest.java:87)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twowheeler -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:52 IST" name="tearDownTest" finished-at="2024-06-12T19:37:53 IST" duration-ms="839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testcase.FirstOpeartionTest@2b30a42c]" started-at="2024-06-12T19:37:53 IST" name="tearDownClass" finished-at="2024-06-12T19:37:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testcase.FirstOpeartionTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
